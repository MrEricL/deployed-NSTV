{"ast":null,"code":"import _classCallCheck from \"/Users/eric/test/herokutestcs/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/eric/test/herokutestcs/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\n\n/**\r\n * @fileoverview FIR LPF. Based on the FIR LPF from Fili by Florian Markert.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/markert/fili.js\r\n */\n\n/**\r\n * A FIR low pass filter.\r\n */\nexport var FIRLPF = /*#__PURE__*/function () {\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\n  function FIRLPF(order, sampleRate, cutOff) {\n    _classCallCheck(this, FIRLPF);\n\n    /** @type {number} */\n    var omega = 2 * Math.PI * cutOff / sampleRate;\n    /** @type {number} */\n\n    var dc = 0;\n    this.filters = [];\n\n    for (var i = 0; i <= order; i++) {\n      if (i - order / 2 === 0) {\n        this.filters[i] = omega;\n      } else {\n        this.filters[i] = Math.sin(omega * (i - order / 2)) / (i - order / 2); // Hamming window\n\n        this.filters[i] *= 0.54 - 0.46 * Math.cos(2 * Math.PI * i / order);\n      }\n\n      dc = dc + this.filters[i];\n    } // normalize\n\n\n    for (var _i = 0; _i <= order; _i++) {\n      this.filters[_i] /= dc;\n    }\n\n    this.z = this.initZ_();\n  }\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\n\n\n  _createClass(FIRLPF, [{\n    key: \"filter\",\n    value: function filter(sample) {\n      this.z.buf[this.z.pointer] = sample;\n      /** @type {number} */\n\n      var out = 0;\n\n      for (var i = 0, len = this.z.buf.length; i < len; i++) {\n        out += this.filters[i] * this.z.buf[(this.z.pointer + i) % this.z.buf.length];\n      }\n\n      this.z.pointer = (this.z.pointer + 1) % this.z.buf.length;\n      return out;\n    }\n    /**\r\n     * Reset the filter.\r\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.z = this.initZ_();\n    }\n    /**\r\n     * Return the default value for z.\r\n     * @private\r\n     */\n\n  }, {\n    key: \"initZ_\",\n    value: function initZ_() {\n      /** @type {!Array} */\n      var r = [];\n\n      for (var i = 0; i < this.filters.length - 1; i++) {\n        r.push(0);\n      }\n\n      return {\n        buf: r,\n        pointer: 0\n      };\n    }\n  }]);\n\n  return FIRLPF;\n}();","map":{"version":3,"sources":["/Users/eric/test/herokutestcs/my-app/node_modules/wavefile/lib/resampler/fir-lpf.js"],"names":["FIRLPF","order","sampleRate","cutOff","omega","Math","PI","dc","filters","i","sin","cos","z","initZ_","sample","buf","pointer","out","len","length","r","push"],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview FIR LPF. Based on the FIR LPF from Fili by Florian Markert.\r\n * @see https://github.com/rochars/wavefile\r\n * @see https://github.com/markert/fili.js\r\n */\r\n\r\n/**\r\n * A FIR low pass filter.\r\n */\r\nexport class FIRLPF {\r\n  \r\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\r\n  constructor(order, sampleRate, cutOff) {\r\n    /** @type {number} */\r\n    let omega = 2 * Math.PI * cutOff / sampleRate;\r\n    /** @type {number} */\r\n    let dc = 0;\r\n    this.filters = [];\r\n    for (let i = 0; i <= order; i++) {\r\n      if (i - order / 2 === 0) {\r\n        this.filters[i] = omega;\r\n      } else {\r\n        this.filters[i] = Math.sin(omega * (i - order / 2)) / (i - order / 2);\r\n        // Hamming window\r\n        this.filters[i] *= (0.54 - 0.46 * Math.cos(2 * Math.PI * i / order));\r\n      }\r\n      dc = dc + this.filters[i];\r\n    }\r\n    // normalize\r\n    for (let i = 0; i <= order; i++) {\r\n      this.filters[i] /= dc;\r\n    }\r\n    this.z = this.initZ_();\r\n  }\r\n\r\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\r\n  filter(sample) {\r\n    this.z.buf[this.z.pointer] = sample;\r\n    /** @type {number} */\r\n    let out = 0;\r\n    for (let i = 0, len = this.z.buf.length; i < len; i++) {\r\n      out += (\r\n        this.filters[i] * this.z.buf[(this.z.pointer + i) % this.z.buf.length]);\r\n    }\r\n    this.z.pointer = (this.z.pointer + 1) % (this.z.buf.length);\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Reset the filter.\r\n   */\r\n  reset() {\r\n    this.z = this.initZ_();\r\n  }\r\n\r\n  /**\r\n   * Return the default value for z.\r\n   * @private\r\n   */\r\n  initZ_() {\r\n    /** @type {!Array} */\r\n    let r = [];\r\n    for (let i = 0; i < this.filters.length - 1; i++) {\r\n      r.push(0);\r\n    }\r\n    return {\r\n      buf: r,\r\n      pointer: 0\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}